<configuration>

  <property name="LOGS_ABSOLUTE_PATH" value="/webserver/imarket/tomcat_log" />

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{yyyyMMdd HH:mm:ss.SSS} [%thread] %-3level %logger{5} - %msg %n</pattern>
    </encoder>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOGS_ABSOLUTE_PATH}/logback.log</file>
    <encoder>
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOGS_ABSOLUTE_PATH}/logback.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>5MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
  </appender>

  <logger name="jdbc" level="OFF"/>
  <logger name="jdbc.sqlonly" level="OFF"/>
  <logger name="jdbc.sqltiming" level="INFO"/>
  <logger name="jdbc.audit" level="OFF"/>
  <logger name="jdbc.resultset" level="OFF"/>
  <logger name="jdbc.resultsettable" level="INFO"/>
  <logger name="jdbc.connection" level="OFF"/>
  <!-- 
  [설명]
- jdbc.sqlonly : SQL문만 로그, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문
- jdbc.sqltiming : SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)
- jdbc.audit : ResultSet 제외한 모든 JDBC 호출 정보. 많은 양의 로그가 생성
- jdbc.resultset : ResultSet 포함 모든 JDBC 호출 정보 로그, 방대한 양의 로그 생성
- jdbc.resultsettable : SQL 결과 조회된 데이터의 table을 로그
   -->
  <root level="INFO">
    <appender-ref ref="STDOUT" />
  </root>

  <logger name="org.springframework.web" level="DEBUG">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </logger>
  
</configuration>